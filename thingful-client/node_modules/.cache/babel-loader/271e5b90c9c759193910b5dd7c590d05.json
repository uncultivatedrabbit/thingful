{"ast":null,"code":"var parse = require('../parse/index.js');\n\nvar addDays = require('../add_days/index.js');\n/**\r\n * @category Weekday Helpers\r\n * @summary Set the day of the week to the given date.\r\n *\r\n * @description\r\n * Set the day of the week to the given date.\r\n *\r\n * @param {Date|String|Number} date - the date to be changed\r\n * @param {Number} day - the day of the week of the new date\r\n * @param {Object} [options] - the object with options\r\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Date} the new date with the day of the week setted\r\n *\r\n * @example\r\n * // Set Sunday to 1 September 2014:\r\n * var result = setDay(new Date(2014, 8, 1), 0)\r\n * //=> Sun Aug 31 2014 00:00:00\r\n *\r\n * @example\r\n * // If week starts with Monday, set Sunday to 1 September 2014:\r\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\r\n * //=> Sun Sep 07 2014 00:00:00\r\n */\n\n\nfunction setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? Number(dirtyOptions.weekStartsOn) || 0 : 0;\n  var date = parse(dirtyDate);\n  var day = Number(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  return addDays(date, diff);\n}\n\nmodule.exports = setDay;","map":null,"metadata":{},"sourceType":"script"}