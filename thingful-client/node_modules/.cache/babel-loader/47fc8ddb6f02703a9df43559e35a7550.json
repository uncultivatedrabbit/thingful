{"ast":null,"code":"var parse = require('../parse/index.js');\n/**\r\n * @category Day Helpers\r\n * @summary Return the array of dates within the specified range.\r\n *\r\n * @description\r\n * Return the array of dates within the specified range.\r\n *\r\n * @param {Date|String|Number} startDate - the first date\r\n * @param {Date|String|Number} endDate - the last date\r\n * @param {Number} [step=1] - the step between each day\r\n * @returns {Date[]} the array with starts of days from the day of startDate to the day of endDate\r\n * @throws {Error} startDate cannot be after endDate\r\n *\r\n * @example\r\n * // Each day between 6 October 2014 and 10 October 2014:\r\n * var result = eachDay(\r\n *   new Date(2014, 9, 6),\r\n *   new Date(2014, 9, 10)\r\n * )\r\n * //=> [\r\n * //   Mon Oct 06 2014 00:00:00,\r\n * //   Tue Oct 07 2014 00:00:00,\r\n * //   Wed Oct 08 2014 00:00:00,\r\n * //   Thu Oct 09 2014 00:00:00,\r\n * //   Fri Oct 10 2014 00:00:00\r\n * // ]\r\n */\n\n\nfunction eachDay(dirtyStartDate, dirtyEndDate, dirtyStep) {\n  var startDate = parse(dirtyStartDate);\n  var endDate = parse(dirtyEndDate);\n  var step = dirtyStep !== undefined ? dirtyStep : 1;\n  var endTime = endDate.getTime();\n\n  if (startDate.getTime() > endTime) {\n    throw new Error('The first date cannot be after the second date');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(parse(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n  }\n\n  return dates;\n}\n\nmodule.exports = eachDay;","map":null,"metadata":{},"sourceType":"script"}