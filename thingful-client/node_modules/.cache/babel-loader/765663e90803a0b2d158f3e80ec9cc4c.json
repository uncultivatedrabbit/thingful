{"ast":null,"code":"var parse = require('../parse/index.js');\n/**\r\n * @category Common Helpers\r\n * @summary Return a date from the array closest to the given date.\r\n *\r\n * @description\r\n * Return a date from the array closest to the given date.\r\n *\r\n * @param {Date|String|Number} dateToCompare - the date to compare with\r\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\r\n * @returns {Date} the date from the array closest to the given date\r\n * @throws {TypeError} the second argument must be an instance of Array\r\n *\r\n * @example\r\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\r\n * var dateToCompare = new Date(2015, 8, 6)\r\n * var result = closestTo(dateToCompare, [\r\n *   new Date(2000, 0, 1),\r\n *   new Date(2030, 0, 1)\r\n * ])\r\n * //=> Tue Jan 01 2030 00:00:00\r\n */\n\n\nfunction closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array');\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare);\n  var timeToCompare = dateToCompare.getTime();\n  var result;\n  var minDistance;\n  dirtyDatesArray.forEach(function (dirtyDate) {\n    var currentDate = parse(dirtyDate);\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result === undefined || distance < minDistance) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}\n\nmodule.exports = closestTo;","map":null,"metadata":{},"sourceType":"script"}