{"ast":null,"code":"var parse = require('../parse/index.js');\n\nvar differenceInCalendarISOYears = require('../difference_in_calendar_iso_years/index.js');\n\nvar compareAsc = require('../compare_asc/index.js');\n\nvar subISOYears = require('../sub_iso_years/index.js');\n/**\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * @description\r\n * Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full ISO week-numbering years\r\n *\r\n * @example\r\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\r\n * var result = differenceInISOYears(\r\n *   new Date(2012, 0, 1),\r\n *   new Date(2010, 0, 1)\r\n * )\r\n * //=> 1\r\n */\n\n\nfunction differenceInISOYears(dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft);\n  var dateRight = parse(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOYears(dateLeft, dateRight));\n  dateLeft = subISOYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  return sign * (difference - isLastISOYearNotFull);\n}\n\nmodule.exports = differenceInISOYears;","map":null,"metadata":{},"sourceType":"script"}